import Terminal from "./index.js";
let terminal = new Terminal({
    target: document.getElementById("root")
});
terminal.createEvents("bruh", async (helper, next) => {
    await helper.sleep(1000);
    next();
});
terminal.setPathTree({
    D: {
        mission1: {
            mission1: "mission1.txt",
            execute1: "execute1.py"
        },
        mission2: {
            mission2: "mission2.txt",
            execute2: {
                bruh: "Aloo",
                Hello: "there !"
            }
        },
        mission3: {
            mission3: "mission3.txt",
            execute3: "execute3.py"
        },
    }
});
terminal.setPath("D:/mission2");
terminal.enableDefaultCommands();
terminal.addFileActions({
    file: "mission2.txt",
    action: async (args, helper) => {
        for (let i = 1; i <= 25; i++) {
            await helper.sleep(50);
            terminal.print(`loading...${i * 4}%`);
        }
        await helper.sleep(1000);
        terminal.print("OYA!");
        return true;
    }
});
terminal.addCommand({
    answer: "bruh",
    description: "testing purposes",
    async action(args, helper) {
        terminal.print("started at t-0");
        await helper.sleep(2000);
        terminal.print("this is at t-2");
        await helper.sleep(3000);
        terminal.print("done !");
        return true;
    }
});
terminal.createEvents("bruh", (helper, next) => {
    terminal.cmd(">");
});
terminal.createEvents("floppa", (helper, next) => {
    console.log("Bruh");
});
terminal.addUser({
    username: "galunga",
    password: "aloha",
    auth: {
        commands: ["open"],
        dirs: ["D:/mission2/mission2.txt"]
    }
});
terminal.setCurrentUser("galunga");
terminal.auth({ user: "galunga", command: "open", directory: "D:/mission2" });
terminal.trigger("bruh");
window.terminal = terminal;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvanMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxRQUFRLE1BQU0sWUFBWSxDQUFBO0FBRWpDLElBQUksUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDO0lBQzFCLE1BQU0sRUFBRSxRQUFRLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQztDQUN4QyxDQUFDLENBQUE7QUFDRixRQUFRLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFFO0lBS25ELE1BQU0sTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUN4QixJQUFJLEVBQUUsQ0FBQTtBQUNSLENBQUMsQ0FBQyxDQUFBO0FBR0YsUUFBUSxDQUFDLFdBQVcsQ0FBQztJQUNuQixDQUFDLEVBQUU7UUFDRCxRQUFRLEVBQUU7WUFDUixRQUFRLEVBQUUsY0FBYztZQUN4QixRQUFRLEVBQUUsYUFBYTtTQUN4QjtRQUNELFFBQVEsRUFBRTtZQUNSLFFBQVEsRUFBRSxjQUFjO1lBQ3hCLFFBQVEsRUFBRTtnQkFDUixJQUFJLEVBQUUsTUFBTTtnQkFDWixLQUFLLEVBQUUsU0FBUzthQUNqQjtTQUNGO1FBQ0QsUUFBUSxFQUFFO1lBQ1IsUUFBUSxFQUFFLGNBQWM7WUFDeEIsUUFBUSxFQUFFLGFBQWE7U0FDeEI7S0FDQTtDQUNKLENBQUMsQ0FBQTtBQUNGLFFBQVEsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUE7QUFDL0IsUUFBUSxDQUFDLHFCQUFxQixFQUFFLENBQUE7QUFDaEMsUUFBUSxDQUFDLGNBQWMsQ0FBQztJQUN0QixJQUFJLEVBQUUsY0FBYztJQUNwQixNQUFNLEVBQUUsS0FBSyxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsRUFBRTtRQUM1QixLQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzNCLE1BQU0sTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQTtZQUN0QixRQUFRLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7U0FDdEM7UUFDRCxNQUFNLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDeEIsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUN0QixPQUFPLElBQUksQ0FBQTtJQUNiLENBQUM7Q0FDRixDQUFDLENBQUE7QUFDRixRQUFRLENBQUMsVUFBVSxDQUFDO0lBQ2xCLE1BQU0sRUFBRSxNQUFNO0lBQ2QsV0FBVyxFQUFFLGtCQUFrQjtJQUMvQixLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNO1FBQ3ZCLFFBQVEsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtRQUNoQyxNQUFNLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDeEIsUUFBUSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO1FBQ2hDLE1BQU0sTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUN4QixRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ3hCLE9BQU8sSUFBSSxDQUFBO0lBQ2IsQ0FBQztDQUNGLENBQUMsQ0FBQTtBQUVGLFFBQVEsQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFFO0lBQzdDLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDbkIsQ0FBQyxDQUFDLENBQUE7QUFFRixRQUFRLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUMvQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBQ3JCLENBQUMsQ0FBQyxDQUFBO0FBQ0YsUUFBUSxDQUFDLE9BQU8sQ0FBQztJQUNmLFFBQVEsRUFBRSxTQUFTO0lBQ25CLFFBQVEsRUFBRSxPQUFPO0lBQ2pCLElBQUksRUFBRTtRQUNKLFFBQVEsRUFBRSxDQUFDLE1BQU0sQ0FBQztRQUNsQixJQUFJLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztLQUNuQztDQUNGLENBQUMsQ0FBQTtBQUNGLFFBQVEsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUE7QUFDbEMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFDLENBQUMsQ0FBQTtBQUUzRSxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBR3hCLE1BQU0sQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFBIn0=